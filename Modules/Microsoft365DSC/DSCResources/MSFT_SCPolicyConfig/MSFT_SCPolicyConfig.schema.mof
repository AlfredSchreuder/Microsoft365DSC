[ClassVersion("1.0.0")]
class MSFT_PolicyConfigApp
{
    [Write, Description("Name of the application.")] String Value;
    [Write, Description("Name of the executable file.")] String Executable;
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigSiteGroupAddress
{
    [Write, Description("")] String MatchType;
    [Write, Description("")] String Url;
    [Write, Description("")] String AddressLower;
    [Write, Description("")] String AddressUpper;
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigDLPSiteGroups
{
    [Write, Description("")] String Id;
    [Write, Description("")] String Name;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigSiteGroupAddress")] String addresses[];
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigRemovableMedia
{
    [Write, Description("")] String deviceId;
    [Write, Description("")] String removableMediaVID;
    [Write, Description("")] String name;
    [Write, Description("")] String alias;
    [Write, Description("")] String removableMediaPID;
    [Write, Description("")] String instancePathId;
    [Write, Description("")] String serialNumberId;
    [Write, Description("")] String hardwareId;
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigDLPRemovableMediaGroups
{
    [Write, Description("")] String groupName;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigRemovableMedia")] String medias[];
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigIPRange
{
    [Write, Description("")] String fromAddress;
    [Write, Description("")] String toAddress;
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigPrinter
{
    [Write, Description("")] Boolean universalPrinter;
    [Write, Description("")] Boolean usbPrinter;
    [Write, Description("")] String usbPrinterId;
    [Write, Description("")] String name;
    [Write, Description("")] String alias;
    [Write, Description("")] String usbPrinterVID;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigIPRange")] String ipRange;
    [Write, Description("")] Boolean corporatePrinter;
    [Write, Description("")] Boolean printToLocal;
    [Write, Description("")] Boolean printToFile;
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigDLPNetworkShareGroups
{
    [Write, Description("")] String groupName;
    [Write, Description("")] String groupId;
    [Write, Description("")] String networkPaths[];
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigDLPAppGroups
{
    [Write, Description("")] String Id;
    [Write, Description("")] String Name;
    [Write, Description("")] String Description;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigDLPApp")] String Apps[];
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigDLPApp
{
    [Write, Description("")] String ExecutableName;
    [Write, Description("")] String Name;
    [Write, Description("")] Boolean Quarantine;
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigBusinessJustificationList
{
    [Write, Description("")] String Id;
    [Write, Description("")] String justificationText;
    [Write, Description("")] Boolean Enable;
};

[ClassVersion("1.0.0")]
class MSFT_PolicyConfigDLPPrinterGroups
{
    [Write, Description("")] String groupName;
    [Write, Description("")] String groupId;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigPrinter")] String printers[];
};

[ClassVersion("1.0.0.0"), FriendlyName("SCPolicyConfig")]
class MSFT_SCPolicyConfig : OMI_BaseResource
{
    [Key, Description(""), ValueMap{"Yes"}, Values{"Yes"}] String IsSingleInstance;
    [Write, Description("")] Boolean AdvancedClassificationEnabled;
    [Write, Description("")] Boolean AuditFileActivity;
    [Write, Description("")] Boolean BandwidthLimitEnabled;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigBusinessJustificationList")] String BusinessJustificationList[];
    [Write, Description("")] String CloudAppMode;
    [Write, Description("")] String CloudAppRestrictionList[];
    [Write, Description("")] UInt32 CustomBusinessJustificationNotification;
    [Write, Description("")] UInt32 DailyBandwidthLimitInMB;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigDLPAppGroups")] String DLPAppGroups[];
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigDLPNetworkShareGroups")] String DLPNetworkShareGroups[];
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigDLPPrinterGroups")] String DLPPrinterGroups[];
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigDLPRemovableMediaGroups")] String DLPRemovableMediaGroups[];
    [Write, Description("")] Boolean IncludePredefinedUnallowedBluetoothApps;
    [Write, Description("")] String MacPathExclusion[];
    [Write, Description("")] Boolean NetworkPathEnforcementEnabled;
    [Write, Description("")] String NetworkPathExclusion;
    [Write, Description("")] String PathExclusion[];
    [Write, Description("")] Boolean serverDlpEnabled;
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigDLPSiteGroups")] String SiteGroups[];
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigApp")] String UnallowedApp[];
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigApp")] String UnallowedBluetoothApp[];
    [Write, Description(""), EmbeddedInstance("MSFT_PolicyConfigApp")] String UnallowedBrowser[];
    [Write, Description("")] String VPNSettings[];
    [Write, Description("Credentials of the workload's Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
