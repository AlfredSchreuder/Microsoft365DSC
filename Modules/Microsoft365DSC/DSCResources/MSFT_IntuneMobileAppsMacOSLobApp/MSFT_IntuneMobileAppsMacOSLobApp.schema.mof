[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementMobileAppAssignments
{
    #TODOK: No other mof's have mentioned Key Id for the Assignment class!

    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};

class MSFT_DeviceManagementMobileAppCategory
{
    [Key, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("The name of the app category.")] String DisplayName;
};

class MSFT_DeviceManagementLargeIcon
{
    [Write, Description("Indicates the content mime type.")] String Type;
    [Write, Description("The byte array that contains the actual content.")] String Value[];
};

[ClassVersion("1.0.0"), FriendlyName("IntuneMobileAppsMacOSLobApp")]
class MSFT_IntuneMobileAppsMacOSLobApp : OMI_BaseResource
{
    [Key, Description("The unique identifier for an entity. Read-only. Inherited from mobileApp object.")] String Id;

    [Write, Description("The description of the app. Inherited from mobileApp.")] String Description;
    [Write, Description("The dewveloper of the app. Inherited from mobileApp.")] String Developer;
    [Write, Description("The admin provided or imported title of the app. Inherited from mobileApp.")] String DisplayName;
    [Write, Description("The InformationUrl of the app. Inherited from mobileApp.")] String InformationUrl;
    [Write, Description("The value indicating whether the app is marked as featured by the admin. Inherited from mobileApp.")] String IsFeatured;
    [Write, Description("Notes for the app. Inherited from mobileApp.")] String Notes;
    [Write, Description("The owner of the app. Inherited from mobileApp.")] String Owner;
    [Write, Description("The privacy statement Url. Inherited from mobileApp.")] String PrivacyInformationUrl;
    [Write, Description("The publisher of the app. Inherited from mobileApp.")] String Publisher;
    [Write, Description("The publishing state for the app. The app cannot be assigned unless the app is published. Inherited from mobileApp. Possible values are: notPublished, processing, published.")] String PublishingState;

    [Write, Description("The list of group assignments for this mobile app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppAssignments")] String Assignments[];
    [Write, Description("The list of categories for this app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppCategory")]  String Categories[];
    [Write, Description("The large icon to be displayed in the app details and used for upload of the icon. Inherited from mobileApp.")] String LargeIcon; #TODOK: Byte[] is just a String

    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
