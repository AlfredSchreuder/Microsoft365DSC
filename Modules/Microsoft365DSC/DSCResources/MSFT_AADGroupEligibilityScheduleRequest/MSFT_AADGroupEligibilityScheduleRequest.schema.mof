[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphRequestSchedule
{
    [Write, Description("When the eligible or active assignment expires."), EmbeddedInstance("MSFT_MicrosoftGraphExpirationPattern")] String Expiration;
    [Write, Description("The frequency of the  eligible or active assignment. This property is currently unsupported in PIM."), EmbeddedInstance("MSFT_MicrosoftGraphPatternedRecurrence1")] String Recurrence;
    [Write, Description("When the  eligible or active assignment becomes active.")] String StartDateTime;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphExpirationPattern
{
    [Write, Description("The requestor's desired duration of access represented in ISO 8601 format for durations. For example, PT3H refers to three hours.  If specified in a request, endDateTime should not be present and the type property should be set to afterDuration.")] String Duration;
    [Write, Description("Timestamp of date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.")] String EndDateTime;
    [Write, Description("The requestor's desired expiration pattern type. The possible values are: notSpecified, noExpiration, afterDateTime, afterDuration."), ValueMap{"notSpecified","noExpiration","afterDateTime","afterDuration"}, Values{"notSpecified","noExpiration","afterDateTime","afterDuration"}] String Type;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphPatternedRecurrence1
{
    [Write, Description("The frequency of an event.  For access reviews: Do not specify this property for a one-time access review.  Only interval, dayOfMonth, and type (weekly, absoluteMonthly) properties of recurrencePattern are supported."), EmbeddedInstance("MSFT_MicrosoftGraphRecurrencePattern1")] String Pattern;
    [Write, Description("The duration of an event."), EmbeddedInstance("MSFT_MicrosoftGraphRecurrenceRange1")] String Range;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphRecurrencePattern1
{
    [Write, Description("The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.")] UInt32 DayOfMonth;
    [Write, Description("A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."), ValueMap{"sunday","monday","tuesday","wednesday","thursday","friday","saturday"}, Values{"sunday","monday","tuesday","wednesday","thursday","friday","saturday"}] String DaysOfWeek[];
    [Write, Description("The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly."), ValueMap{"sunday","monday","tuesday","wednesday","thursday","friday","saturday"}, Values{"sunday","monday","tuesday","wednesday","thursday","friday","saturday"}] String FirstDayOfWeek;
    [Write, Description("Specifies on which instance of the allowed days specified in daysOfWeek the event occurs, counted from the first instance in the month. The possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly."), ValueMap{"first","second","third","fourth","last"}, Values{"first","second","third","fourth","last"}] String Index;
    [Write, Description("The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.")] UInt32 Interval;
    [Write, Description("The month in which the event occurs.  This is a number from 1 to 12.")] UInt32 Month;
    [Write, Description("The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required. For more information, see values of type property."), ValueMap{"daily","weekly","absoluteMonthly","relativeMonthly","absoluteYearly","relativeYearly"}, Values{"daily","weekly","absoluteMonthly","relativeMonthly","absoluteYearly","relativeYearly"}] String Type;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphRecurrenceRange1
{
    [Write, Description("The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.")] String EndDate;
    [Write, Description("The number of times to repeat the event. Required and must be positive if type is numbered.")] UInt32 NumberOfOccurrences;
    [Write, Description("Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.")] String RecurrenceTimeZone;
    [Write, Description("The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.")] String StartDate;
    [Write, Description("The recurrence range. The possible values are: endDate, noEnd, numbered. Required."), ValueMap{"endDate","noEnd","numbered"}, Values{"endDate","noEnd","numbered"}] String Type;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphTicketInfo
{
    [Write, Description("The ticket number.")] String TicketNumber;
    [Write, Description("The description of the ticket system.")] String TicketSystem;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphIdentitySet
{
    [Write, Description("Optional. The application associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String Application;
    [Write, Description("Optional. The device associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String Device;
    [Write, Description("Optional. The user associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String User;
    [Write, Description("If present, represents a conversation (for example, team or channel) mentioned in a message."), EmbeddedInstance("MSFT_MicrosoftGraphTeamworkConversationIdentity")] String Conversation;
    [Write, Description("The application instance associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String ApplicationInstance;
    [Write, Description("An identity the participant would like to present itself as to the other participants in the call."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String AssertedIdentity;
    [Write, Description("The Azure Communication Services user associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String AzureCommunicationServicesUser;
    [Write, Description("The encrypted user associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String Encrypted;
    [Write, Description("Type of endpoint that the participant uses. Possible values are: default, voicemail, skypeForBusiness, skypeForBusinessVoipPhone, unknownFutureValue."), ValueMap{"default","voicemail","skypeForBusiness","skypeForBusinessVoipPhone","unknownFutureValue"}, Values{"default","voicemail","skypeForBusiness","skypeForBusinessVoipPhone","unknownFutureValue"}] String EndpointType;
    [Write, Description("The guest user associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String Guest;
    [Write, Description("The Skype for Business on-premises user associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String OnPremises;
    [Write, Description("The phone user associated with this action."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String Phone;
    [Write, Description("The group associated with this action. Optional."), EmbeddedInstance("MSFT_MicrosoftGraphIdentity")] String Group;
    [Write, Description("The SharePoint group associated with this action. Optional."), EmbeddedInstance("MSFT_MicrosoftGraphSharePointIdentity")] String SiteGroup;
    [Write, Description("The SharePoint user associated with this action. Optional."), EmbeddedInstance("MSFT_MicrosoftGraphSharePointIdentity")] String SiteUser;
    [Write, Description("The type of the entity."), ValueMap{"#microsoft.graph.chatMessageFromIdentitySet","#microsoft.graph.chatMessageMentionedIdentitySet","#microsoft.graph.chatMessageReactionIdentitySet","#microsoft.graph.communicationsIdentitySet","#microsoft.graph.sharePointIdentitySet"}, Values{"#microsoft.graph.chatMessageFromIdentitySet","#microsoft.graph.chatMessageMentionedIdentitySet","#microsoft.graph.chatMessageReactionIdentitySet","#microsoft.graph.communicationsIdentitySet","#microsoft.graph.sharePointIdentitySet"}] String odataType;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphIdentity
{
    [Write, Description("Id of the User group or device")] String Id;
    [Write, Description("Displayname of the user group or device")] String displayName;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphTeamworkConversationIdentity
{
    [Write, Description("Type of conversation. Possible values are: team, channel, chat, and unknownFutureValue."), ValueMap{"team","channel","chat","unknownFutureValue"}, Values{"team","channel","chat","unknownFutureValue"}] String ConversationIdentityType;
    [Write, Description("The display name of the identity.For drive items, the display name might not always be available or up to date. For example, if a user changes their display name the API might show the new value in a future response, but the items associated with the user don't show up as changed when using delta.")] String DisplayName;
    [Write, Description("Unique identifier for the identity or actor. For example, in the access reviews decisions API, this property might record the id of the principal, that is, the group, user, or application that's subject to review.")] String Id;
    [Write, Description("The Azure Communication Services resource ID associated with the user.")] String AzureCommunicationServicesResourceId;
    [Write, Description("First-party Microsoft application that presents this identity.")] String ApplicationType;
    [Write, Description("True if the participant shouldn't be shown in other participants' rosters.")] Boolean Hidden;
    [Write, Description("The tenant ID of the application.")] String TenantId;
    [Write, Description("Email address of the user.")] String Email;
    [Write, Description("Type of initiator. Possible values are: user, application, system, unknownFutureValue."), ValueMap{"user","application","system","unknownFutureValue"}, Values{"user","application","system","unknownFutureValue"}] String InitiatorType;
    [Write, Description("Details of the identity."), EmbeddedInstance("MSFT_MicrosoftGraphDetailsInfo")] String Details;
    [Write, Description("Type of identity that has been provisioned, such as 'user' or 'group'. Supports $filter (eq, contains).")] String IdentityType;
    [Write, Description("The application identifier of the service principal.")] String AppId;
    [Write, Description("The sign in name of the SharePoint identity.")] String LoginName;
    [Write, Description("Type of application that is referenced. Possible values are: aadApplication, bot, tenantBot, office365Connector, outgoingWebhook, and unknownFutureValue."), ValueMap{"aadApplication","bot","tenantBot","office365Connector","outgoingWebhook","unknownFutureValue"}, Values{"aadApplication","bot","tenantBot","office365Connector","outgoingWebhook","unknownFutureValue"}] String ApplicationIdentityType;
    [Write, Description("Type of user. Possible values are: aadUser, onPremiseAadUser, anonymousGuest, federatedUser, personalMicrosoftAccountUser, skypeUser, phoneUser, unknownFutureValue and emailUser."), ValueMap{"aadUser","onPremiseAadUser","anonymousGuest","federatedUser","personalMicrosoftAccountUser","skypeUser","phoneUser","unknownFutureValue","emailUser"}, Values{"aadUser","onPremiseAadUser","anonymousGuest","federatedUser","personalMicrosoftAccountUser","skypeUser","phoneUser","unknownFutureValue","emailUser"}] String UserIdentityType;
    [Write, Description("Indicates the client IP address associated with the user performing the activity (audit log only).")] String IpAddress;
    [Write, Description("The userPrincipalName attribute of the user.")] String UserPrincipalName;
    [Write, Description("The type of the entity."), ValueMap{"#microsoft.graph.azureCommunicationServicesUserIdentity","#microsoft.graph.communicationsApplicationIdentity","#microsoft.graph.communicationsApplicationInstanceIdentity","#microsoft.graph.communicationsEncryptedIdentity","#microsoft.graph.communicationsGuestIdentity","#microsoft.graph.communicationsPhoneIdentity","#microsoft.graph.communicationsUserIdentity","#microsoft.graph.emailIdentity","#microsoft.graph.initiator","#microsoft.graph.provisionedIdentity","#microsoft.graph.provisioningServicePrincipal","#microsoft.graph.provisioningSystem","#microsoft.graph.servicePrincipalIdentity","#microsoft.graph.sharePointIdentity","#microsoft.graph.teamworkApplicationIdentity","#microsoft.graph.teamworkConversationIdentity","#microsoft.graph.teamworkTagIdentity","#microsoft.graph.teamworkUserIdentity","#microsoft.graph.userIdentity"}, Values{"#microsoft.graph.azureCommunicationServicesUserIdentity","#microsoft.graph.communicationsApplicationIdentity","#microsoft.graph.communicationsApplicationInstanceIdentity","#microsoft.graph.communicationsEncryptedIdentity","#microsoft.graph.communicationsGuestIdentity","#microsoft.graph.communicationsPhoneIdentity","#microsoft.graph.communicationsUserIdentity","#microsoft.graph.emailIdentity","#microsoft.graph.initiator","#microsoft.graph.provisionedIdentity","#microsoft.graph.provisioningServicePrincipal","#microsoft.graph.provisioningSystem","#microsoft.graph.servicePrincipalIdentity","#microsoft.graph.sharePointIdentity","#microsoft.graph.teamworkApplicationIdentity","#microsoft.graph.teamworkConversationIdentity","#microsoft.graph.teamworkTagIdentity","#microsoft.graph.teamworkUserIdentity","#microsoft.graph.userIdentity"}] String odataType;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphDetailsInfo
{
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphSharePointIdentity
{
    [Write, Description("The sign in name of the SharePoint identity.")] String LoginName;
    [Write, Description("The display name of the identity.For drive items, the display name might not always be available or up to date. For example, if a user changes their display name the API might show the new value in a future response, but the items associated with the user don't show up as changed when using delta.")] String DisplayName;
    [Write, Description("Unique identifier for the identity or actor. For example, in the access reviews decisions API, this property might record the id of the principal, that is, the group, user, or application that's subject to review.")] String Id;
    [Write, Description("The Azure Communication Services resource ID associated with the user.")] String AzureCommunicationServicesResourceId;
    [Write, Description("First-party Microsoft application that presents this identity.")] String ApplicationType;
    [Write, Description("True if the participant shouldn't be shown in other participants' rosters.")] Boolean Hidden;
    [Write, Description("The tenant ID of the application.")] String TenantId;
    [Write, Description("Email address of the user.")] String Email;
    [Write, Description("Type of initiator. Possible values are: user, application, system, unknownFutureValue."), ValueMap{"user","application","system","unknownFutureValue"}, Values{"user","application","system","unknownFutureValue"}] String InitiatorType;
    [Write, Description("Details of the identity."), EmbeddedInstance("MSFT_MicrosoftGraphDetailsInfo")] String Details;
    [Write, Description("Type of identity that has been provisioned, such as 'user' or 'group'. Supports $filter (eq, contains).")] String IdentityType;
    [Write, Description("The application identifier of the service principal.")] String AppId;
    [Write, Description("Type of application that is referenced. Possible values are: aadApplication, bot, tenantBot, office365Connector, outgoingWebhook, and unknownFutureValue."), ValueMap{"aadApplication","bot","tenantBot","office365Connector","outgoingWebhook","unknownFutureValue"}, Values{"aadApplication","bot","tenantBot","office365Connector","outgoingWebhook","unknownFutureValue"}] String ApplicationIdentityType;
    [Write, Description("Type of conversation. Possible values are: team, channel, chat, and unknownFutureValue."), ValueMap{"team","channel","chat","unknownFutureValue"}, Values{"team","channel","chat","unknownFutureValue"}] String ConversationIdentityType;
    [Write, Description("Type of user. Possible values are: aadUser, onPremiseAadUser, anonymousGuest, federatedUser, personalMicrosoftAccountUser, skypeUser, phoneUser, unknownFutureValue and emailUser."), ValueMap{"aadUser","onPremiseAadUser","anonymousGuest","federatedUser","personalMicrosoftAccountUser","skypeUser","phoneUser","unknownFutureValue","emailUser"}, Values{"aadUser","onPremiseAadUser","anonymousGuest","federatedUser","personalMicrosoftAccountUser","skypeUser","phoneUser","unknownFutureValue","emailUser"}] String UserIdentityType;
    [Write, Description("Indicates the client IP address associated with the user performing the activity (audit log only).")] String IpAddress;
    [Write, Description("The userPrincipalName attribute of the user.")] String UserPrincipalName;
    [Write, Description("The type of the entity."), ValueMap{"#microsoft.graph.azureCommunicationServicesUserIdentity","#microsoft.graph.communicationsApplicationIdentity","#microsoft.graph.communicationsApplicationInstanceIdentity","#microsoft.graph.communicationsEncryptedIdentity","#microsoft.graph.communicationsGuestIdentity","#microsoft.graph.communicationsPhoneIdentity","#microsoft.graph.communicationsUserIdentity","#microsoft.graph.emailIdentity","#microsoft.graph.initiator","#microsoft.graph.provisionedIdentity","#microsoft.graph.provisioningServicePrincipal","#microsoft.graph.provisioningSystem","#microsoft.graph.servicePrincipalIdentity","#microsoft.graph.sharePointIdentity","#microsoft.graph.teamworkApplicationIdentity","#microsoft.graph.teamworkConversationIdentity","#microsoft.graph.teamworkTagIdentity","#microsoft.graph.teamworkUserIdentity","#microsoft.graph.userIdentity"}, Values{"#microsoft.graph.azureCommunicationServicesUserIdentity","#microsoft.graph.communicationsApplicationIdentity","#microsoft.graph.communicationsApplicationInstanceIdentity","#microsoft.graph.communicationsEncryptedIdentity","#microsoft.graph.communicationsGuestIdentity","#microsoft.graph.communicationsPhoneIdentity","#microsoft.graph.communicationsUserIdentity","#microsoft.graph.emailIdentity","#microsoft.graph.initiator","#microsoft.graph.provisionedIdentity","#microsoft.graph.provisioningServicePrincipal","#microsoft.graph.provisioningSystem","#microsoft.graph.servicePrincipalIdentity","#microsoft.graph.sharePointIdentity","#microsoft.graph.teamworkApplicationIdentity","#microsoft.graph.teamworkConversationIdentity","#microsoft.graph.teamworkTagIdentity","#microsoft.graph.teamworkUserIdentity","#microsoft.graph.userIdentity"}] String odataType;
};

[ClassVersion("1.0.0.0"), FriendlyName("AADGroupEligibilityScheduleRequest")]
class MSFT_AADGroupEligibilityScheduleRequest : OMI_BaseResource
{
    [Write, Description("The identifier of membership or ownership eligibility relationship to the group. Required. The possible values are: owner, member, unknownFutureValue."), ValueMap{"owner","member","unknownFutureValue"}, Values{"owner","member","unknownFutureValue"}] String AccessId;
    [Write, Description("The identifier of the group representing the scope of the membership and ownership eligibility through PIM for groups. Required.")] String GroupId;
    [Key, Description("The Displayname of the group reppresenting the scope of the membership and ownership eligibility through PIM for groups. Required.")] String GroupDisplayName;
    [Write, Description("The identifier of the principal whose membership or ownership eligibility to the group is managed through PIM for groups. Required.")] String PrincipalId;
    [Write, Description("The identifier of the schedule that's created from the eligibility request. Optional.")] String TargetScheduleId;
    [Write, Description("Represents the type of operation on the group membership or ownership assignment request. The possible values are: adminAssign, adminUpdate, adminRemove, selfActivate, selfDeactivate, adminExtend, adminRenew. adminAssign: For administrators to assign group membership or ownership to principals.adminRemove: For administrators to remove principals from group membership or ownership. adminUpdate: For administrators to change existing group membership or ownership assignments.adminExtend: For administrators to extend expiring assignments.adminRenew: For administrators to renew expired assignments.selfActivate: For principals to activate their assignments.selfDeactivate: For principals to deactivate their active assignments."), ValueMap{"adminAssign","adminUpdate","adminRemove","selfActivate","selfDeactivate","adminExtend","adminRenew","selfExtend","selfRenew","unknownFutureValue"}, Values{"adminAssign","adminUpdate","adminRemove","selfActivate","selfDeactivate","adminExtend","adminRenew","selfExtend","selfRenew","unknownFutureValue"}] String Action;
    [Write, Description("Determines whether the call is a validation or an actual call. Only set this property if you want to check whether an activation is subject to additional rules like MFA before actually submitting the request.")] Boolean IsValidationOnly;
    [Write, Description("A message provided by users and administrators when create they create the privilegedAccessGroupAssignmentScheduleRequest object.")] String Justification;
    [Write, Description("The period of the group membership or ownership assignment. Recurring schedules are currently unsupported."), EmbeddedInstance("MSFT_MicrosoftGraphrequestSchedule")] String ScheduleInfo;
    [Write, Description("Ticket details linked to the group membership or ownership assignment request including details of the ticket number and ticket system."), EmbeddedInstance("MSFT_MicrosoftGraphticketInfo")] String TicketInfo;
    [Write, Description("The identifier of the approval of the request.")] String ApprovalId;
    [Write, Description("The request completion date time.")] String CompletedDateTime;
    [Write, Description("The principal that created the request."), EmbeddedInstance("MSFT_MicrosoftGraphidentitySet")] String CreatedBy;
    [Write, Description("The status of the request. Not nullable. The possible values are: Canceled, Denied, Failed, Granted, PendingAdminDecision, PendingApproval, PendingProvisioning, PendingScheduleCreation, Provisioned, Revoked, and ScheduleCreated. Not nullable.")] String Status;
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
